!function(){"use strict";const t=t=>({name:"NoRouteFoundForDefaultPath",message:`No route found for the defaultPath: '${t}'`});class e{constructor(n,a,s){this.location=n,this.routes=s;const{matches:r}=e.traverse(a,s);if(0===r.length)throw t(a)}startTracking(t){t.addEventListener("hashchange",({newURL:t})=>{const e=new URL(t).hash.slice(1);this.moveTo(e)})}static traverse(t,n,a=[],s=""){let r=null;if(n.find(e=>{const n=e.match(t);return null!==n&&(r={route:e,result:n},!0)}),null===r)return{path:s,matches:a};const{result:{path:i},route:{children:h}}=r;if(h.length>0){const n=t.substring(i.length);return e.traverse(n,h,[...a,r],s+i)}return{path:s+i,matches:[...a,r]}}moveTo(t){const{path:n,matches:a}=e.traverse(t,this.routes);return this.location.replace(`#${n}`),a.forEach(({route:t,result:{params:e}})=>{t.handler({path:n,params:e})}),n}}class n{constructor(t,e,n=[]){this.paramNames=[];const a=t.split("/").map(t=>t.startsWith(":")?(this.paramNames.push(t.slice(1)),"([^/]+)"):t).join("/");this.pathRegex=new RegExp(`^${a}`),this.handler=e,this.children=n}match(t){const e=this.pathRegex.exec(t);if(null===e)return null;const[n,...a]=e,s=t.charAt(n.length);if(""!==s&&"/"!==s)return null;const r={};return this.paramNames.forEach((t,e)=>{r[t]=a[e]}),{path:n,params:r}}}const a={};var s=(t,e,n)=>{if(!/[a-z][a-z0-9_.-]*-[a-z0-9_.-]*/.test(t))throw(t=>({name:"InvalidViewName",message:`Invalid view name: '${t}'`}))(t);return customElements.define(t,class extends HTMLElement{constructor(){super();const s=this.getAttribute("id")||"";void 0===a[t]&&(a[t]={}),a[t][s]={element:this,fun:n};const{html:r,attachments:i}=n(...e);this.innerHTML=r,Object.entries(i).forEach(([t,e])=>{Object.assign(this.querySelector(t),e)})}}),t};const r=(t,e="")=>(...n)=>{if(void 0===a[t])return;const{element:s,fun:r}=a[t][e],{html:i,attachments:h}=r(...n);s.innerHTML=i,Object.entries(h).forEach(([t,e])=>{Object.assign(s.querySelector(t),e)})};var i=s("deadend-navbar",[""],t=>({html:`\n    <nav>\n      <a class="title" href="#">deadend</a>\n      path: ${t}\n    </nav>\n  `,attachments:{nav:{onclick:()=>r("deadend-navbar")("clicked")}}})),h=s("deadend-home",[],()=>({html:'\n    <h1 class="home-title">deadend</h1>\n    <p>My deadend of frontend</span>\n    <ul>\n      <li><a href="#/input">Using input</a></li>\n      <li><a href="#/http">Using HTTP</a></li>\n      <li><a href="#/tick">Using tick event</a></li>\n    </ul>\n  ',attachments:{}})),c=s("deadend-input",[],()=>({html:"This is input view",attachments:{}})),o=s("deadend-http",[],()=>({html:"This is http view",attachments:{}})),l=s("deadend-tick",[],()=>({html:"This is tick view",attachments:{}}));const u={home:h,input:c,http:o,tick:l};var d=s("deadend-route-switch",["home"],t=>{const e=u[t];return{html:`\n      <${e}></${e}>\n    `,attachments:{}}}),m={root:s("deadend-root",[],()=>({html:`\n    <${i}></${i}>\n    <${d}></${d}>\n  `,attachments:{}})),navbar:i,routeSwitch:d,input:c,http:o,tick:l};const{root:p,navbar:v,routeSwitch:f}=m,w=t=>()=>{r(v)(t),r(f)(t)},g=new e(window.location,"",[new n("",({path:t})=>{""===t&&w("home")()},[new n("/input",w("input")),new n("/http",w("http")),new n("/tick",w("tick"))])]);document.getElementById("root").innerHTML=`<${p}></${p}>`,g.moveTo("/bar/baz"),g.startTracking(window)}();
